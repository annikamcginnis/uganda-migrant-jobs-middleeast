# You can name this whatever you want
name: update

# Permissions to allow committing changes
permissions:
  contents: write
  
# Triggers for the workflow
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */3 * *'  # Runs every 3 days

jobs:
  daily:
    runs-on: ubuntu-latest
    env:
        API_KEY: ${{ secrets.API_KEY }}  # Reference the GitHub Secret
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Python packages
      run: pip install playwright jupyter lxml pandas requests beautifulsoup4 html5lib python-dotenv matplotlib

    - name: Install Playwright browsers
      run: playwright install  # This command downloads the required browsers

    # Sequentially execute six notebooks and output results to logs
    - name: Execute Notebook 1
      run: jupyter nbconvert --to notebook --execute "1. Scraping EEMIS Companies.ipynb" --stdout

    - name: Execute Notebook 2
      run: jupyter nbconvert --to notebook --execute "2. Scraping EEMIS Jobs.ipynb" --stdout

    - name: Execute Notebook 3
      run: jupyter nbconvert --to notebook --execute "3. Combining Companies and Jobs Data.ipynb" --stdout

    - name: Execute Notebook 4
      run: jupyter nbconvert --to notebook --execute "4. Data Cleaning and Adding Columns.ipynb" --stdout

    - name: Execute Notebook 5
      run: jupyter nbconvert --to notebook --execute "5. EEMIS Analysis.ipynb" --stdout

    - name: Execute Notebook 6
      run: jupyter nbconvert --to notebook --execute "6. Mapping.ipynb" --stdout

    - name: Move .js files to docs folder
      run: |
          mv uganda_migrant_jobs_map_1.js docs/
          mv uganda_migrant_jobs_map_2.js docs/

    - name: Commit and push any changes
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
